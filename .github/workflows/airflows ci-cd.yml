name: Airflow CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Adaptez à votre version Python
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Build Docker images
        run: docker-compose build

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run unit tests
        run: pytest
      - name: Lint code
        run: pylint $(git ls-files '*.py')

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          registry: ${{ secrets.REGISTRY }}
      - name: Push Docker images
        run: docker-compose push
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            # Arrêter les conteneurs existants (optionnel)
            docker-compose down
            # Supprimer les conteneurs arrêtés (optionnel)
            docker-compose rm -f
            # Puller les dernières images
            docker-compose pull
            # Démarrer Airflow
            docker-compose up -d
            # Tâches post-déploiement (e.g., migrations de base de données, validation des DAGs)
            # ...